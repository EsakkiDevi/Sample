import java.util.*;
class Functions
{
    public static int Factorial(int n)
    {
        if(n==1)
        return 1;
        else
        return n*Factorial(n-1);
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number:");
        int number=sc.nextInt();
        int fact=Factorial(number);
        System.out.println("the Factorial of " + number +" is "+fact );
    }
}
//---------------------------------------------------------------------------------
class CheckPrime
{
    public static String Prime(int n)
    {
        int i=0;
        if(n<=1)
        return  "not Prime Number";
        for(i=2;i<Math.sqrt(n);i++)
        {
            if (n%i==0)
            return "Not Prime Number";
            
        }
        return "Prime number";
    }
    public static void main(String[] args) 
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Number");
        int number=sc.nextInt();
        String Result=Prime(number);
        System.out.println("The number " +number+" is "+Result);

    }
     
 //-------------------------------------------------------------------------------------------
 class Fiboseries
 {
    public static void fibo(int n)
    {
        int i=0;
        int t1=0;
        int t2=1;
        for(i=1;i<=n;i++)
        {
            System.out.print(t1+" ");
            int t3=t1+t2;
            t1=t2;
            t2=t3;
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter no of terms:");
        int term=sc.nextInt();
        fibo(term);
    }
 }       
 
    
}
//-----------------------------------------------------------------------------
class SumofDigits
{
    public static void SumDigits(int n)
   {
    int sum=0,digit=0;
    while(n>0)
    {
    
        digit=n%10;
        sum=sum+digit;
        n=n/10;
    }
    System.out.println("Sum of digits:"+sum);
    }


    public static void main(String[] args) 
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter the Number:");
      int number=sc.nextInt();
      SumDigits(number);
    }
}
//------------------------------------------------------------------------
class Checkpali
{
    public static void Pali(String str)
    {
        int n=str.length();
        //Convert to lowercase
        String Low_case="";
        char c1=0;
        int i;
        for(i=0;i<str.length();i++)
        {
        c1=str.charAt(i);
        if(c1>'A' && c1<='Z')
        {
            Low_case=Low_case+=(char)(c1+32);
        }
        else
        {
            Low_case+=c1;
        }
        }
        //Palindrome check
         i=0;
         str=Low_case;
        while(i<n)
        {
            if(str.charAt(i) != str.charAt(n-1))
            {
            
                System.out.println(str+" is not a palindrome");
                return;
                
            }
            i++;
            n--;
        }
        
        System.out.println(str+" is a palindrome");
    }

    public static void main(String[] args) 
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter a String:");
        String s1=sc.nextLine();
        Pali(s1);    
    }
}
//-----------------------------------------------------------------------------------------
class GCD
{
    public static void main(String[] args) 
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the numbers:" );
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        FindGCD(n1,n2);


    }
    public static void FindGCD(int a,int b)
    {
        int i;
        int c =  a < b ? a : b;
        for(i=c;i>=1;i--)
        {
        if(a % i == 0 && b % i == 0 )
            {
             int GCD=i;
             break;
             
            }
        }
     System.out.println("GCD:"+i);  
    }
}
//-----------------------------------------------------------------------
class FindLCM
{
    public static void main(String[] args) 
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the numbers:" );
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        int result=FindLCM(n1,n2);
        System.out.println("The LCM of "+n1+ " and " +n2+ " is "+result);


    }
    public static int FindLCM(int num1,int num2)
    {
        int LCM=0,HCF=0,i=0;
        for(i=1;i<=num1;i++){
            if(num1%i==0 && num2%i==0)
            {
            HCF=i;
            }
        }
            LCM=(num1*num2)/HCF;
            return LCM;
    
    }

}
//-------------------------------------------------------------------------------------------------
class Armstrong
{
    public static void CheckArmstrong(int n)
    {
        int num=n;
       
        int count=1;
        int sum=0,i;
        int digit;
        while(num!=0)
        {
            num=num/10;
            count++;
        }
        num=n;
        while(num>0)
        {
            digit=num%10;
            int power=1;
            for(i=0;i<count;i++)
            {
                power*=digit;
            }
            num=num/10;
            sum+=power;
        }
        if(sum==n)
        {
            System.out.println(n+" is a Amstrong Number");
            return;
            
            
        }
    
        System.out.println(n+" is not a Amstrong number");
        

        
    }
    public static void main(String[] args)
     {
        Scanner sc= new Scanner(System.in);
        System.out.println("Enter the number:");
        int number=sc.nextInt();
        CheckArmstrong(number);
        
    }
}
//--------------------------------------------------------------------------------------
class Factor
{
    public static int CountFactor(int n)
    {
        int i;
        int count=0;
        for(i=1;i<=n;i++)
        {
            if(n%i==0)
            {
                count++;
            }
        }
        return count;
       
    }
    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number:");
        int number=sc.nextInt();
        int result=CountFactor(number);
        System.out.println("Number of Factor of "+number+" is "+result );
    }
}
//-----------------------------------------------------------------------------------------
class CheckPerfect
{
    public static String Checkper(int n)
    {
        int i;
        int sum=0;
        for(i=1;i<n;i++)
        {
            if(n%i==0)
            {
                sum=sum+i;
            }
        }
        if(sum==n)
        return "Perfect Number";
        else
        return "Not Perfect Nummber";
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number");
        int number=sc.nextInt();
        String Result=Checkper(number);
        System.out.println(number+" is a "+Result);
    }
}
//------------------------------------------------------------------------------
class PowerFunction
{
    public static int Power(int b,int e)
    {
        int  i ,power=1;
        for(i=0;i<e;i++)
        {
            power=power*b;
        }
        return power;
    }
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the Base number:");
        int base=sc.nextInt();
        System.out.println("Enter the Exponent:");
        int exponent=sc.nextInt();
        int Result=Power(base,exponent);
        System.out.println(base+" power  "+ exponent+ " is "+Result);

    }
}
//--------------------------------------------------------------------------------
class DigitReverse
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number:");
        int number=sc.nextInt();
        int Result=Reverse(number);
        System.out.println("The Reversed Number of "+number+" is "+Result);
    }
    public static int Reverse(int n) 
    {
        int digit=0,rev=0;
        while(n!=0)
        {
            digit=n%10;
            rev=rev*10+digit;
            n=n/10;
        }
        return rev;
        
    }
}

    
